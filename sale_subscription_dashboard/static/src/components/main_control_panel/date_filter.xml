<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <t t-name="sale_subscription_dashboard.date_filter" owl="1">
        <a type="button" class="dropdown-toggle" data-bs-toggle="dropdown">
            <span class="fa fa-calendar" title="Dates" role="img" aria-label="Dates"/>
            From:
            <span class="js_format_date">
                <t t-out="state.start_date.toLocaleString(window.luxon.DateTime.DATE_MED)"/>
            </span>
            <span class="o_reports_date_to"> to:
                <span class="js_format_date">
                    <t t-out="state.end_date.toLocaleString(window.luxon.DateTime.DATE_MED)"/>
                </span>
            </span>
        </a>
        <div class="dropdown-menu o_filters_menu" role="menu">
            <t t-foreach="state.dashboard_options.ranges" t-as="section" t-key="section_index">
                <t t-foreach="Object.entries(section)" t-as="range" t-key="range[0]">
                    <t t-set="rangeKey" t-value="range[0]"/>
                    <t t-set="rangeValues" t-value="range[1]"/>
                    <a role="menuitem" 
                        t-attf-class="dropdown-item js_subscription_dashboard_date_filter #{state.dashboard_options.filter === rangeKey ? 'selected' : ''}"
                        t-att-title="rangeValues.name"
                        t-on-click="(e) => this.clickDateFilter(e, rangeKey)">
                            <t t-out="rangeValues.name"/>
                    </a>
                </t>
                <div role="separator" class="dropdown-divider"></div>
            </t>

            <a role="menuitem" 
                t-attf-class="dropdown-item js_foldable_trigger #{state.dashboard_options.filter === 'custom' ? 'selected' : ''}"
                t-att-title="Custom"
                t-on-click="(e) => this.clickDateFilter(e, 'custom')">
                Custom
            </a>

            <t t-if="state.dashboard_options.filter === 'custom'">
                <div class="mx-2" data-filter='custom_filter_date'>
                    <label for="date_from">Start Date:</label>
                    <DatePicker date="state.start_date" onDateTimeChanged="(date) => this.customDate.start_date = date"/>
                    <label for="date_to">End Date:</label>
                    <DatePicker date="state.end_date" onDateTimeChanged="(date) => this.customDate.end_date = date"/>
                    <button type="button" class="btn btn-primary js_subscription_dashboard_date_filter" t-on-click="applyCustomDates">
                        Apply
                    </button>
                </div>
            </t>
        </div>
    </t>
</odoo>
