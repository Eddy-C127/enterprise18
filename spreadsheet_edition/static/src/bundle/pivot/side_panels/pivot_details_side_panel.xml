<?xml version="1.0" encoding="utf-8"?>
<templates>
    <div t-name="spreadsheet_edition.PivotDetailsSidePanel" class="o_spreadsheet_pivot_side_panel h-100 overflow-hidden d-flex justify-content-between flex-column">
        <div class="h-100 overflow-auto">
            <t t-set="definition" t-value="store.definition"/>
            <PivotTitleSection pivotId="props.pivotId" flipAxis.bind="flipAxis"/>
            <div class="o_side_panel_section">
                <div class="o_side_panel_title">Model</div>
                <div class="o_model_name"><t t-esc="modelDisplayName"/> (<t t-esc="definition.model"/>)</div>
            </div>
            <OdooPivotLayoutConfigurator
                unusedGroupableFields="store.unusedGroupableFields"
                measureFields="store.measureFields"
                unusedDateTimeGranularities="store.unusedDateTimeGranularities"
                definition="definition"
                onDimensionsUpdated.bind="onDimensionsUpdated"
                allGranularities="store.allGranularities"
            />
            <div class="o_side_panel_section">
                <div class="o_side_panel_title">Domain</div>
                <DomainSelector resModel="definition.model" domain="definition.domain.toString()" t-key="'pivot_' + props.pivotId"/>
                <div class="btn btn-link o_edit_domain" t-on-click="openDomainEdition">
                    <i class="oi oi-arrow-right me-1"/>Edit domain
                </div>
            </div>
            <div class="o_side_panel_section" t-if="definition.sortedColumn">
                <div class="o_side_panel_title">Sorting</div>
                <div t-esc="formatSort()"/>
            </div>
            <div class="o_side_panel_section">
                <div class="o_pivot_last_update"><i>Last updated at <t t-esc="getLastUpdate()"/></i></div>
            </div>
            <div class="o_side_panel_section py-1" t-if="env.model.getters.isPivotUnused(props.pivotId)">
                <ValidationMessages messages="[unusedPivotWarning]" msgType="'warning'"/>
            </div>
        </div>
        <PivotDeferUpdate
            deferUpdate="store.updatesAreDeferred"
            toggleDeferUpdate="(value) => store.deferUpdates(value)"
            isDirty="store.isDirty"
            discard="store.discardPendingUpdate"
            apply="store.applyUpdate"
        />
    </div>
</templates>
