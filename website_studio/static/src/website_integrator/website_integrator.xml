<?xml version="1.0" encoding="utf-8"?>
<templates>

<t t-name="website_studio.WebsiteIntegrator.ListingOrPage">
    <div class="overflow-auto d-flex flex-wrap align-items-stretch flex-row gap-3 pb-5">
        <ThumbnailItem className="'o_website_studio_new_card' + (!isDesigner ? 'disabled' : '')" onClick="() => this.onNewPage(group.type, website.id)" icon="{src: '/web_studio/static/src/img/default_icon_app.png', alt: 'App icon'}">
            <t t-if="group.type === 'listing'">New Listing</t>
            <t t-else="">New Page</t>
        </ThumbnailItem>
        <t t-foreach="this.getPages(group.type, website.id)" t-as="page" t-key="page.id">
            <t t-set="item" t-value="{...page, name: page.page_name, icon: group.iconData, tooltip: this.computePageUrl(page) }" />
            <t t-set="onItemClicked" t-value="page.page_type === 'listing' ? this.openPageUrl.bind(this, page) : this.onConfigurePage.bind(this, page)" />
            <ThumbnailItem onClick="page.page_type === 'listing' ? this.openPageUrl.bind(this, page) : this.onConfigurePage.bind(this, page)" icon="item.icon">
                <t t-esc="item.name" />
                <t t-set-slot="dropdown">
                    <DropdownItem t-if="openPageUrl" onSelected="openPageUrl" attrs="{ href: '#' }">View in website</DropdownItem>
                    <DropdownItem onSelected="() => this.onConfigurePage(page)" attrs="{ href: '#' }">Configure</DropdownItem>
                    <DropdownItem onSelected="() => this.deletePage(page)" attrs="{ href: '#' }">Delete</DropdownItem>
                </t>
            </ThumbnailItem>
        </t>
    </div>
</t>

<t t-name="website_studio.WebsiteIntegrator.PageGroup">
    <div class="mb-2">
        <span class="fs-4 fw-bold" t-esc="group.name" />
        <span> &#8212; <t t-esc="group.description" /></span>
    </div>

    <div class="grid gap-3 px-4">
        <t t-if="this.hasMultiWebsite">
            <div t-foreach="this.getWebsites()" t-as="website" t-key="website.id" class="g-col-4 d-flex flex-column" >
                <div class="mx-auto mb-2 w-100 text-center bg-300 rounded-2">
                    <span class="fs-6 fw-bold" t-esc="website.display_name" />
                    <button class="btn" t-on-click="() => this.onNewPage(group.type, website.id)">
                        <i class="fa fa-plus opacity-50 opacity-100-hover"/>
                    </button>
                </div>
                <t t-call="website_studio.WebsiteIntegrator.ListingOrPage" />
            </div>
        </t>
        <div t-else="" class="d-flex gap-4" >
            <t t-set="website" t-value="this.getWebsites()[0]" />
            <t t-call="website_studio.WebsiteIntegrator.ListingOrPage" />
       </div>
    </div>
</t>

<t t-name="website_studio.WebsiteIntegrator">
    <div class="o_website_studio_website_integrator w-100 h-100 overflow-auto d-flex flex-column gap-4 p-4">
        <div class="o_website_studio_form">
            <div class="mb-2">
                <span class="fs-4 fw-bold">Forms</span>
                <span> &#8212; Allow visitors of your website to create records themselves</span>
            </div>
            <div class="d-flex flex-row gap-4 ms-4 pb-5">
                <ThumbnailItem className="'o_website_studio_new_card' + (!isDesigner ? 'disabled' : '')" onClick="onNewForm" icon="{src: '/web_studio/static/src/img/default_icon_app.png', alt: 'App icon'}">
                    New Form
                </ThumbnailItem>
                <t t-foreach="state.forms" t-as="form" t-key="form.id">
                    <ThumbnailItem onClick="() => this.openFormUrl(form.url)" icon="{src: '/web_studio/static/src/img/view_type/form.png', alt: 'View form'}">
                        <t t-esc="form.name" />
                    </ThumbnailItem>
                </t>
            </div>
        </div>
        <div t-foreach="this.pageGroups" t-as="group" t-key="group.type" t-attf-class="o_website_studio_#{group.type}">
            <t t-call="website_studio.WebsiteIntegrator.PageGroup" />
        </div>
    </div>
</t>

</templates>
