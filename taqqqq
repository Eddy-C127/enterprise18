[1mdiff --git a/pos_urban_piper/controllers/main.py b/pos_urban_piper/controllers/main.py[m
[1mindex ac9aadb9cb3..c51b720a761 100644[m
[1m--- a/pos_urban_piper/controllers/main.py[m
[1m+++ b/pos_urban_piper/controllers/main.py[m
[36m@@ -160,12 +160,15 @@[m [mclass PosUrbanPiperController(http.Controller):[m
                 _logger.warning("UrbanPiper: Charge product not found for %r", charge_title)[m
                 pos_config_sudo.log_xml("UrbanPiper: - %s" % (data), 'urbanpiper_charge_product_not_found')[m
                 continue[m
[31m-            total_tax = request.env['account.tax'][m
[31m-            for tax_payload in charge.get('taxes'):[m
[32m+[m[32m            tax_records = [][m
[32m+[m[32m            for tax_payload in charge.get('taxes', []):[m
                 if tax_payload.get('value'):[m
                     tax_percentage = int((100 * tax_payload['value']) / charge.get('value'))[m
                     domain = self._get_tax_domain(pos_config_sudo, tax_percentage)[m
[31m-                    total_tax |= request.env['account.tax'].sudo().search(domain, limit=1)[m
[32m+[m[32m                    tax_record = request.env['account.tax'].sudo().search(domain, limit=1)[m
[32m+[m[32m                    if tax_record:[m
[32m+[m[32m                        tax_records.append(tax_record.id)[m
[32m+[m[32m            total_tax = request.env['account.tax'].browse(tax_records)[m
             tax_ids_after_fiscal_position = pos_config_sudo.urbanpiper_fiscal_position_id.map_tax(total_tax)[m
             taxes = tax_ids_after_fiscal_position.compute_all(charge.get('value'), pos_config_sudo.company_id.currency_id, 1, product=charge_product)[m
             lines.append(Command.create({[m
[36m@@ -173,7 +176,7 @@[m [mclass PosUrbanPiperController(http.Controller):[m
                 'full_product_name': charge.get('title', charge_product.sudo().name),[m
                 'qty': 1,[m
                 'price_unit': charge.get('value'),[m
[31m-                'tax_ids': [Command.set(total_tax.ids)],[m
[32m+[m[32m                'tax_ids': [Command.set(tax_records)],[m
                 'price_subtotal': taxes['total_excluded'],[m
                 'price_subtotal_incl': taxes['total_included'],[m
                 'note': charge.get('title'),[m
[36m@@ -219,10 +222,7 @@[m [mclass PosUrbanPiperController(http.Controller):[m
             'delivery_identifier': details['id'],[m
             'delivery_status': details['order_state'].lower(),[m
             'general_note': "\n".join([m
[31m-                map([m
[31m-                    lambda x: x.strip(),[m
[31m-                    [details.get('instructions'), general_note][m
[31m-                )[m
[32m+[m[32m                x.strip() for x in [details.get('instructions'), general_note][m
             ),[m
             'delivery_provider_id': pos_delivery_provider.id,[m
             'prep_time': get_prep_time(details),[m
