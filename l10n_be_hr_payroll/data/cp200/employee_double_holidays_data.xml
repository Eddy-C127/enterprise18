<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- 92% of monthly gross salary -->
    <function model="hr.salary.rule" name="write">
        <value model="hr.salary.rule" search="[
            ('struct_id', '=', ref('l10n_be_hr_payroll.hr_payroll_structure_cp200_double_holiday')),
            ('code', '=', 'BASIC')]"/>
        <value eval="{
            'amount_python_compute': 'result = payslip.paid_amount\nresult_rate = 92'}"/>
    </function>

    <record id="cp200_employees_double_holiday_pay_basic" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_dp"/>
        <field name="name">Double Holiday Pay</field>
        <field name="code">D.P</field>
        <field name="sequence">2</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.BASIC * 0.92</field>
        <field name="active" eval="False"/>  <!-- YTI RULE TO REMOVE IN MASTER -->
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <record id="cp200_employees_double_holiday_european_leaves_deduction" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_dp"/>
        <field name="name">European Leaves Deduction</field>
        <field name="code">EU.LEAVE.DEDUC</field>
        <field name="sequence">3</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(payslip.dict._get_sum_european_time_off_days(check=True))</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = -payslip.dict._get_sum_european_time_off_days()</field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <!-- 85% of monthly gross salary is used to compute social contributions -->
    <record id="cp200_employees_double_holiday_gross_salary" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_salary"/>
        <field name="name">Gross Salary</field>
        <field name="code">SALARY</field>
        <field name="sequence">20</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = categories.BASIC
result = result / 0.92 * 0.85
        </field>
        <field name="appears_on_payslip" eval="False"/>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <record id="cp200_employees_double_holiday_onss_rule" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_onss"/>
        <field name="name">Social contribution</field>
        <field name="code">ONSS</field>
        <field name="sequence">41</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result=not contract.no_onss</field>
        <field name="amount_select">percentage</field>
        <field name="amount_percentage_base">SALARY</field>
        <field name="amount_percentage">-13.07</field>
        <field name="partner_id" ref="res_partner_onss"/>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <!-- YTI TODO master: Drop this rule -->
    <record id="cp200_employees_double_holiday_employment_bonus_employees" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_employment_bonus"/>
        <field name="name">Employment Bonus</field>
        <field name="code">EmpBonus.1</field>
        <field name="sequence">42</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = categories.BRUT &lt;= payslip.rule_parameter('work_bonus_reference_wage_high')</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = compute_employment_bonus_employees(payslip, categories, worked_days, inputs)</field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
        <field name="active" eval="False"/>
    </record>

    <record id="cp200_employees_double_holiday_gross_with_ip" model="hr.salary.rule">
        <field name="name">Total Gross</field>
        <field name="sequence">90</field>
        <field name="code">GROSSIP</field>
        <field name="category_id" ref="l10n_be_hr_payroll.hr_salary_rule_category_gross_with_ip"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.ip)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.BASIC + categories.ALW</field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <record id="cp200_employees_double_holiday_ip_part" model="hr.salary.rule">
        <field name="category_id" ref="hr_salary_rule_category_ip_part"/>
        <field name="name">Intellectual Property</field>
        <field name="code">IP.PART</field>
        <field name="sequence">91</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.ip)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = - compute_ip(payslip, categories, worked_days, inputs)</field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <function model="hr.salary.rule" name="write">
        <value model="hr.salary.rule" search="[
            ('struct_id', '=', ref('l10n_be_hr_payroll.hr_payroll_structure_cp200_double_holiday')),
            ('code', '=', 'GROSS')]"/>
        <value eval="{'amount_python_compute': 'result = BASIC + categories.ALW - (categories.ONSS * contract.ip_wage_rate / 100.0 if contract.ip else 0)', 'sequence': '101'}"/>
    </function>

    <record id="cp200_employees_double_holiday_pay_p_p" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_pp"/>
        <field name="name">Withholding Tax</field>
        <field name="code">P.P</field>
        <field name="sequence">102</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = compute_double_holiday_withholding_taxes(payslip, categories, worked_days, inputs)</field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <record id="cp200_employees_double_holiday_ip" model="hr.salary.rule">
        <field name="category_id" ref="l10n_be_hr_payroll.hr_payroll_head_div_net"/>
        <field name="name">Intellectual Property</field>
        <field name="code">IP</field>
        <field name="amount_select">code</field>
        <field name="sequence">172</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.ip)</field>
        <field name="amount_python_compute">result = compute_ip(payslip, categories, worked_days, inputs)</field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <record id="cp200_employees_double_holiday_ip_deduction" model="hr.salary.rule">
        <field name="category_id" ref="l10n_be_hr_payroll.hr_payroll_head_div_net"/>
        <field name="name">Intellectual Property Income Deduction</field>
        <field name="code">IP.DED</field>
        <field name="amount_select">code</field>
        <field name="sequence">173</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.ip)</field>
        <field name="amount_python_compute">result = compute_ip_deduction(payslip, categories, worked_days, inputs)</field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <function model="hr.salary.rule" name="write">
        <value model="hr.salary.rule" search="[
            ('struct_id', '=', ref('l10n_be_hr_payroll.hr_payroll_structure_cp200_double_holiday')),
            ('code', '=', 'NET')]"/>
        <value eval="{'amount_python_compute': 'result = BASIC + categories.ALW + categories.DED', 'sequence': '201'}"/>
    </function>

    <record id="cp200_employees_double_holiday_salary_attachment_salary" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Attachment of Salary</field>
        <field name="code">ATTACH_SALARY</field>
        <field name="amount_select">code</field>
        <field name="sequence">174</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.ATTACH_SALARY</field>
        <field name="amount_python_compute">
result = -inputs.ATTACH_SALARY.amount
result_name = inputs.ATTACH_SALARY.name
        </field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <record id="cp200_employees_double_holiday_salary_asignment_salary" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Assignment of Salary</field>
        <field name="code">ASSIG_SALARY</field>
        <field name="amount_select">code</field>
        <field name="sequence">174</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.ASSIG_SALARY</field>
        <field name="amount_python_compute">
result = -inputs.ASSIG_SALARY.amount
result_name = inputs.ASSIG_SALARY.name
        </field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>

    <record id="cp200_employees_double_holiday_salary_child_support" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_head_div_net"/>
        <field name="name">Child Support</field>
        <field name="code">CHILD_SUPPORT</field>
        <field name="amount_select">code</field>
        <field name="sequence">174</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.CHILD_SUPPORT</field>
        <field name="amount_python_compute">
result = -inputs.CHILD_SUPPORT.amount
result_name = inputs.CHILD_SUPPORT.name
        </field>
        <field name="struct_id" ref="hr_payroll_structure_cp200_double_holiday"/>
    </record>
</odoo>
