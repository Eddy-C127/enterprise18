<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <record model="account.invoice" id="account_invoice_diot_0">
            <field name="company_id" eval="ref('base.main_company')"/>
            <field name="partner_id" eval="ref('base.res_partner_1')"/>
            <field name="type">in_invoice</field>
            <field name="account_id" model="account.account" search="[('code', '=', '201.01.01')]"/>
            <field name="invoice_line_ids" model="account.tax" eval="[
                (0, 0, {
                    'product_id': ref('product.product_product_3'),
                    'price_unit': 100.0,
                    'uom_id': ref('uom.product_uom_unit'),
                    'quantity': 1,
                    'name': 'PC Assemble SC234',
                    'sequence': 15,
                    'invoice_line_tax_ids': [(6, 0, [obj().search([('name', '=', 'IVA(16%) COMPRAS')], limit=1).id])],
                    'account_id': obj().env['account.account'].search([('code', '=', '501.01.01')], limit=1).id}),
                (0, 0, {
                    'product_id': ref('product.product_product_5'),
                    'price_unit': 100.0,
                    'uom_id': ref('uom.product_uom_unit'),
                    'quantity': 1,
                    'name': 'PC Assemble + Custom (PC on Demand)',
                    'sequence': 20,
                    'invoice_line_tax_ids': [(6, 0, [obj().search([('name', '=', 'IVA(0%) COMPRAS')], limit=1).id])],
                    'account_id': obj().env['account.account'].search([('code', '=', '501.01.01')], limit=1).id})
            ]"/>
        </record>

        <function model="account.invoice" name="compute_taxes">
            <value eval="[ref('l10n_mx_reports.account_invoice_diot_0')]"/>
        </function>

        <function model="account.invoice" name="action_invoice_open">
            <value eval="[ref('l10n_mx_reports.account_invoice_diot_0')]"/>
        </function>
    </data>
</odoo>
