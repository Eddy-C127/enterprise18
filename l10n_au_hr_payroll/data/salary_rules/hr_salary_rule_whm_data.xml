<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <!-- Sources
        https://www.ato.gov.au/
        https://oac.chris21.com/OAC_ichrisp/Help/ichrisUG/646250.htm
    -->
    <!-- Extra Pay Rule for inputs -->

    <!-- BASIC SALARY, sequence 1 -->

    <record id="l10n_au_ote_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_ote"/>
        <field name="name">Ordinary Time Earnings</field>
        <field name="code">OTE</field>
        <field name="sequence">20</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
ote_inputs = payslip.input_line_ids.filtered(lambda i: i.input_type_id.l10n_au_superannuation_treatment == 'ote')
ote_worked_day = payslip.worked_days_line_ids.filtered(lambda l: l.work_entry_type_id.l10n_au_is_ote)
result = sum(ote_inputs.mapped('amount')) + sum(ote_worked_day.mapped('amount'))
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
        <field name="appears_on_payslip">False</field>
    </record>

    <record id="l10n_au_extra_pay_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.GROSS"/>
        <field name="name">Extra Pay</field>
        <field name="code">GROSS.COMMISSION</field>
        <field name="sequence">40</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = 'EXTRA' in inputs</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['EXTRA'].amount
result_name = inputs['EXTRA'].name
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
        <field name="appears_on_payroll_report" eval="True"/>
    </record>

    <record id="l10n_au_salary_sacrifice_total_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_salary_sacrifice_total"/>
        <field name="name">Salary Sacrifice Total</field>
        <field name="code">SALARY.SACRIFICE.TOTAL</field>
        <field name="sequence">60</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = -contract.l10n_au_salary_sacrifice_other - contract.l10n_au_workplace_giving_employer - contract.l10n_au_salary_sacrifice_superannuation</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = -contract.l10n_au_salary_sacrifice_other - contract.l10n_au_workplace_giving_employer - contract.l10n_au_salary_sacrifice_superannuation
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
    </record>

    <record id="l10n_au_workplace_giving_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_workplace_giving"/>
        <field name="name">Workplace Giving</field>
        <field name="code">WORKPLACE.GIVING</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.l10n_au_workplace_giving</field>
        <field name="sequence">80</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = -contract.l10n_au_workplace_giving
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
    </record>

    <!-- Taxable Salary, Sequence 100 -->
    <function model="hr.salary.rule" name="write">
        <value model="hr.salary.rule" search="[
            ('struct_id', '=', ref('l10n_au_hr_payroll.hr_payroll_structure_au_whm')),
            ('code', '=', 'GROSS')]"/>
        <value eval="{
            'amount_python_compute': &quot;result = categories['BASIC'] + categories['ALW'] + categories['SALARY.SACRIFICE.TOTAL'] + categories['WORK.GIVING']&quot;
        }"/>
    </function>

    <!-- Schedule 15 - Tax table for working holiday makers -->
    <record id="l10n_au_withholding_whm_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_withholding"/>
        <field name="name">PAYG Withholding</field>
        <field name="code">WITHHOLD</field>
        <field name="sequence">108</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
rates = payslip._rule_parameter("l10n_au_whm")['no_tfn' if employee.l10n_au_scale == '4' else 'regular']
for rate in rates:
    if rate[0] &lt;= ytd_gross &lt; float(rate[1]):
        result_rate = -rate[3]
        break
result = categories['GROSS']
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
    </record>

    <!-- Only Total will reflect on Net as a DED category-->
    <record id="l10n_au_withholding_net_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_net_withholding"/>
        <field name="name">Total Withholding Amount</field>
        <field name="code">WITHHOLD.TOTAL</field>
        <field name="sequence">164</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = categories['WITHHOLD'] + min(-categories['WITHHOLD'], categories["WITHHOLD.OFFSET"])
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
    </record>

    <!-- Attachment of Salary, Sequence 174 -->
    <!-- Assignment of Salary, Sequence 174 -->
    <!-- Child Support (Standard), Sequence 174 -->
    <!-- Deduction, Sequence 198 -->
    <!-- Reimbursement, Sequence 199 -->

    <!-- Include Extra Pay in NET -->
    <!-- Net Salary, Sequence 200 -->
    <function model="hr.salary.rule" name="write">
        <value model="hr.salary.rule" search="[
            ('struct_id', '=', ref('l10n_au_hr_payroll.hr_payroll_structure_au_whm')),
            ('code', '=', 'NET')]"/>
        <value eval="{
            'amount_python_compute': &quot;result = categories['BASIC'] + categories['ALW'] + categories['DED'] + result_rules['GROSS.COMMISSION']['total']&quot;
        }"/>
    </function>

    <record id="l10n_au_salary_sacrifice_other_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_salary_sacrifice"/>
        <field name="name">Salary Sacrifice Other Benefit</field>
        <field name="code">SALARY.SACRIFICE.OTHER</field>
        <field name="sequence">210</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = -contract.l10n_au_salary_sacrifice_other - contract.l10n_au_workplace_giving_employer</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = -contract.l10n_au_salary_sacrifice_other - contract.l10n_au_workplace_giving_employer
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
    </record>

    <record id="l10n_au_salary_sacrifice_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_salary_sacrifice"/>
        <field name="name">Concessional Super Contribution</field>
        <field name="code">SUPER.CONTRIBUTION</field>
        <field name="sequence">220</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.l10n_au_salary_sacrifice_superannuation</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = contract.l10n_au_salary_sacrifice_superannuation
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
    </record>

    <record id="l10n_au_super_contribution_structure_15" model="hr.salary.rule">
        <field name="category_id" ref="l10n_au_hr_payroll.rule_category_super_contribution"/>
        <field name="name">Super Guarantee</field>
        <field name="code">SUPER</field>
        <field name="sequence">230</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
rate = payslip._rule_parameter("l10n_au_withholding_super")
result = categories['OTE'] * rate/100
        </field>
        <field name="struct_id" ref="l10n_au_hr_payroll.hr_payroll_structure_au_whm"/>
    </record>
</odoo>
